
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$GOOGLE-KEEP-primary: mat.define-palette(mat.$indigo-palette);
$GOOGLE-KEEP-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$GOOGLE-KEEP-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$GOOGLE-KEEP-theme: mat.define-light-theme((
  color: (
    primary: $GOOGLE-KEEP-primary,
    accent: $GOOGLE-KEEP-accent,
    warn: $GOOGLE-KEEP-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($GOOGLE-KEEP-theme);

:root {
  --note-width: 240px
}

.main {
  background-color: #202124;
  color: white;
}

.Hover:hover {
  outline: none !important;
  border-radius: 50% !important;
  background-color: rgba(232, 234, 237, 0.08) !important;
  cursor: pointer !important;
}

.w-100 {
  width: 100% !important;
}

.d-none {
  display: none !important;
}

.d-flex {
  display: flex !important;
}
.highlighted {
  background-color: yellow;
}

.mx-auto {
  margin-inline: auto;
  transition: all 0.7s;
}
//.background{
//  background: red;
//  border: 1px solid transparent;
//  box-shadow: 0 1px 1px 0 rgba(65,69,73,.3), 0 1px 3px 1px rgba(65,69,73,.15);
//}
.pop:hover::before {
  content: attr(data-pop);
  position: absolute;
  width: max-content;
  left: 50%;
  transform: translate(-50%, 0);
  top: 37px;
  background-color: rgb(0 0 0 / 61%);
  padding: 3px 9px;
  font-size: 15px;
  font-family: 'Google Sans', serif;
  border-radius: 5px;

}


/* ===== Scrollbar CSS ===== */

/* Chrome, Edge, and Safari */
*::-webkit-scrollbar {
  height: 16px;
  overflow: visible;
  width: 16px;
}

*::-webkit-scrollbar-track {
  background: transparent;
}

*::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, .3);
  background-clip: padding-box;
  border: solid transparent;
  border-width: 1px 1px 1px 6px;
  box-shadow: inset 1px 1px 0 rgb(0 0 0 / 10%), inset 0 -1px 0 rgb(0 0 0 / 7%);
}

*::-webkit-scrollbar-track {
  background-clip: padding-box;
  border: solid transparent;
  border-width: 0 0 0 4px;
}

//
img,
svg {
  vertical-align: middle;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
}

//? fonts
@import "./assets/fonts/fonts.scss";

//? snackbar AKA toast
@import "~node_modules/node-snackbar/dist/snackbar.css";
//? cbox
@import "./assets/scss/checkboxes.scss";

//? icons
@import "./assets/scss/icons.scss";

//? labels
@import "./assets/scss/labels.scss";

//? tooltips
@import "./assets/scss/tooltips.scss";

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
